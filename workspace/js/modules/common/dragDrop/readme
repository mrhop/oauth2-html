Organization Chart[role as the basic element] also with the line,be careful a Trash as the temp remove ,also can be revert or drag back
data structure shall be like tree,can also be json children, a role 有从属，汇总，虚拟节点多对多三种关系（1对多， 多对一，多对多）

工作流模块，role and event(action),event contains 1,all,大多数的通过方式，然后工作流有申请（审批）和下发通知两种流程

so drag drop have three types role，action【关联文件，comments,大的可以看到小的上传的文件comment，小的看不到大的，level + 工作流id ,获取时 level> ...，工作流拒绝时，有一个返回某个event部分的操作，此时拒绝的内容作为工作流关联role id，该内容为拒绝后指定的action关联的角色可见】，virtual node(for关联上下组织结构)
使用localstorage做暂存
then others...

D3 drag

角色， 圆形
职位，一个职位可以有多个角色，一个角色可以指定多个职位，来处理相应的行为 职位圆角矩形
行为，菱形
主要是模板，模板有一个描述，后续的工作流操作，还是需要表单来完成

1. 行为不能行为拖放在一起
2. 角色，职位不能再工作流中拖放在一起
3. 行为只能和角色以及职位拖放在一起
4.一个行为既可以有多个上行的处理人，也可以有多个下行的处理人，每个下行的处理人又可以有不同的行为
5. 行为的特性可以有描述，权重（多人，单人，全部决定），驳回权权重（多人，单人，全部决定），【单一文件（zip或其他），app中考虑音频，注解，这种是实例中包含的】，parents， children，parents对行为具有描述权，children对行为具有查看，反驳权（根据工作流行为（权重在children部分））
6. 职位，角色中包含名称，点击后职位会有其可用角色，角色点击后会有其包含职位
7. 工作流和工作流模板是两个概念，工作流目前有两种类型（下发和申请，自有其权重）
8. 组织结构图，主要是组织结构相关
9. 使用tab来进行3个分类的考量（组织结构图，下发，申请）

技术性：

圆形，菱形，圆角矩形，箭头，拖拽基点，拖拽以及点击时的modal显示并处理，排列的合理性分布

基本框架搭建完成，目前是形状的绘制以及label的居中，然后考虑将图形和label整合为一个组，并保证其可以整体拖拽，然后，考虑工作区的整体结构和触发事件

拖拽入口框
拖拽回放
垃圾回收框

数据结构明确

所有使用localstorage来实现暂存，直到进行save的时候

首先将基础性的技术性问题解决，然后进行业务性的判定处理
//svg then child svg,！！now
sample group用于收集sample data，并根据行为进行处理，应该设计为一个对象，有行为，有属性，有值


